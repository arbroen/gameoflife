[coverage:run]
branch = True
source =
    gol
omit =
    */__version__.py
    */start.py

[coverage:paths]
source =
   src/gol
   .tox/*/lib/python*/site-packages/gol
   .tox/pypy*/site-packages/gol

# Black advises a line-length of 88.
[flake8]
max-complexity = 10
max-line-length = 88

[isort]
include_trailing_comma = true
multi_line_output = 3

[tox]
isolated_build = true
envlist = safety, py36, py37, pypy3, report, linters

# All linter environments below.
[testenv]
skip_install = True
whitelist_externals =
    poetry
depends =
    safety
deps =
    coverage
    pytest
setenv =
    LANG=en_US.utf-8
    LC_ALL=en_US.utf-8
commands =
    poetry install -v
    poetry run coverage run --parallel-mode -m pytest {posargs}

[testenv:report]
skip_install = True
depends =
    py36
    py37
    pypy3
deps =
    coverage
commands =
    poetry run coverage combine
    poetry run coverage report
    poetry run coverage html

[testenv:safety]
description =
    Check whether there are security issues with dependencies.
deps =
    safety
commands =
    poetry install
    safety check
depends = ""

[testenv:bandit]
description =
    Check whether there are obvious security issues with codebase.
deps =
    bandit
commands =
    bandit -r src/gol/

[testenv:flake8]
description =
    Validate PEP8 compliance.
deps=
    flake8
    pep8-naming
    flake8-print
    flake8-colors
commands =
    flake8 {posargs}

[testenv:mypy]
description =
    Validate mypy static typing.
deps =
    mypy
commands =
    mypy src --ignore-missing-imports

[testenv:black]
description =
    Validate whether black auto-formatting has been applied.
deps =
    black
commands =
    black src/ tests/ --check

[testenv:isort]
description =
    Sort python imports alphabetically in logical sections.
deps =
    isort
commands =
    isort --recursive src tests

[testenv:linters]
description =
    Apply various tools, see tox -a -v
basepython = python3.7
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:flake8]deps}
    {[testenv:mypy]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}
    {[testenv:bandit]commands}
